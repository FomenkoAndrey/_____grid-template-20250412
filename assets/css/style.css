/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}
.posts__container, .subscribe__container, .about__container, .header__menu-container, .header__content-container{
  width:min(100% - 40px, 1300px);
  margin-inline:auto;
}

*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  overflow-y:scroll;
  font-family:"Roboto", sans-serif;
  font-size:16px;
}

body{
  color:#637588;
  background-color:#ffffff;
}

h1{
  text-align:center;
  letter-spacing:0.078em;
  font-family:"Roboto Slab", serif;
  font-weight:300;
  line-height:1.2;
}

h2{
  margin:0 0 1.5em;
  letter-spacing:0.1em;
  color:#2d3651;
  font-family:"Roboto Slab", serif;
  line-height:1.2;
}

h3{
  font-size:1.25rem;
}

a{
  text-decoration:none;
  color:#ffffff;
}

.btn{
  display:flex;
  align-items:center;
  justify-content:center;
  padding:0.5em 1em;
  transition:background-color 0.3s;
  letter-spacing:0.1em;
  border-width:2px;
  border-style:solid;
}
.btn:hover{
  background-color:#d66926;
}
.btn--light{
  border-color:#ffffff;
  background-color:rgba(255, 255, 255, 0.1);
}
.btn--primary{
  min-height:60px;
  border-color:#2d3651;
  background-color:rgba(45, 54, 81, 0.8);
  font-size:1.125rem;
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  border:0;
}

.header{
  display:grid;
  align-items:center;
  min-height:100vh;
  padding:150px 0;
  color:#ffffff;
  background-color:#2d3651;
  background-image:url(../images/img-header.png);
  background-repeat:no-repeat;
  background-position:center;
  background-size:cover;
}

.header__content{
  position:relative;
  z-index:1;
}
.header__content-actions{
  display:flex;
  justify-content:center;
  gap:20px;
}

.header__menu{
  position:absolute;
  z-index:2;
  top:0;
  right:0;
  left:0;
  padding:20px 0;
}
.header__menu-container{
  display:grid;
  align-items:center;
  gap:20px;
  grid-template-columns:auto 1fr;
}

.header__logo-link{
  display:block;
  letter-spacing:0.22em;
  font-size:1.5rem;
}
.header__logo-accent{
  display:inline-block;
  margin-right:4px;
  padding:14px 1px 13px 5px;
  border:3px solid #d53d27;
}
.header__navbar-link{
  display:block;
  letter-spacing:0.09em;
  font-size:1.125rem;
}
.header__navbar-btn{
  position:relative;
  width:30px;
  height:22.5px;
  margin-left:auto;
  cursor:pointer;
  transition:0.5s ease-in-out;
  transform:rotate(0deg);
}
.header__navbar-btn-row{
  position:absolute;
  display:block;
  width:50%;
  height:3px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  background:#ffffff;
}
.header__navbar-btn-row:nth-child(even){
  left:50%;
  border-radius:0 3px 3px 0;
}
.header__navbar-btn-row:nth-child(odd){
  left:0;
  border-radius:3px 0 0 3px;
}
.header__navbar-btn-row:nth-child(1), .header__navbar-btn-row:nth-child(2){
  top:0;
}
.header__navbar-btn-row:nth-child(3), .header__navbar-btn-row:nth-child(4){
  top:9px;
}
.header__navbar-btn-row:nth-child(5), .header__navbar-btn-row:nth-child(6){
  top:18px;
}
.header__navbar-btn.active span:nth-child(1), .header__navbar-btn.active span:nth-child(6){
  transform:rotate(45deg);
}
.header__navbar-btn.active span:nth-child(2), .header__navbar-btn.active span:nth-child(5){
  transform:rotate(-45deg);
}
.header__navbar-btn.active span:nth-child(1){
  top:3.5px;
  left:2.5px;
}
.header__navbar-btn.active span:nth-child(2){
  top:3.5px;
  left:calc(50% - 2.5px);
}
.header__navbar-btn.active span:nth-child(3){
  left:-50%;
  opacity:0;
}
.header__navbar-btn.active span:nth-child(4){
  left:100%;
  opacity:0;
}
.header__navbar-btn.active span:nth-child(5){
  top:14.5px;
  left:2.5px;
}
.header__navbar-btn.active span:nth-child(6){
  top:14.5px;
  left:calc(50% - 2.5px);
}

.header__overlay{
  background-color:rgba(45, 54, 81, 0.8);
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skills__container{
  display:grid;
  margin-bottom:20px;
  gap:10px;
}
.skills__actions{
  display:flex;
  justify-content:center;
}

.skills__item{
  position:relative;
  overflow:hidden;
}
.skills__item-title{
  z-index:1;
  margin:0;
  letter-spacing:0.1em;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skills__item-link{
  display:flex;
  align-items:center;
  justify-content:center;
  height:100%;
  padding:20px;
  transition:color 0.3s;
}
.skills__item-image{
  transition:transform 0.3s;
  background-position:center;
  background-size:cover;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skills__item-overlay{
  transition:opacity 0.3s;
  background-color:rgba(45, 54, 81, 0.8);
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skills__item:hover .skills__item-overlay{
  opacity:0.95;
}
.skills__item:hover .skills__item-link{
  color:#d66926;
}
.skills__item:hover .skills__item-image{
  transform:scale(1.1);
}
.skills__item:nth-child(1){
  grid-area:a1;
}
.skills__item:nth-child(2){
  grid-area:a2;
}
.skills__item:nth-child(3){
  grid-area:a3;
}
.skills__item:nth-child(4){
  grid-area:a4;
}
.skills__item:nth-child(5){
  grid-area:a5;
}
.skills__item:nth-child(6){
  grid-area:a6;
}
.skills__item:nth-child(7){
  grid-area:a7;
}
.skills__item:nth-child(8){
  grid-area:a8;
}
.skills__item:nth-child(9){
  grid-area:a9;
}

.about{
  background-color:#e5e5e5;
}
.about__container{
  display:grid;
}
.about__description{
  position:relative;
  text-align:justify;
  letter-spacing:0.05em;
  line-height:1.33333333;
}
.about__description p:last-of-type{
  margin-bottom:0;
}
.about__picture{
  text-align:center;
}
.about__image{
  width:auto;
  max-width:100%;
  height:auto;
}

.subscribe{
  padding:30px 0;
  background-color:#2d3651;
}
.subscribe__form{
  display:grid;
  gap:20px;
}
.subscribe__input{
  padding:0.5em 1.875em;
  color:#ffffff;
  display:block;
  width:100%;
  height:60px;
  transition:0.3s;
  letter-spacing:0.1em;
  border:2px solid transparent;
  border-bottom-color:rgba(255, 255, 255, 0.5);
  background-color:rgba(255, 255, 255, 0.05);
}
.subscribe__input::placeholder{
  color:rgba(255, 255, 255, 0.5);
}
.subscribe__input:hover, .subscribe__input:focus{
  border-color:#ffffff;
  background-color:rgba(255, 255, 255, 0.1);
}
.subscribe__input:hover::placeholder, .subscribe__input:focus::placeholder{
  color:#ffffff;
  font-weight:400;
}
.subscribe__input:focus-visible{
  outline:none;
}
.subscribe__btn{
  display:flex;
  align-items:center;
  justify-content:center;
  cursor:pointer;
  color:rgba(255, 255, 255, 0.5);
  display:block;
  width:100%;
  height:60px;
  transition:0.3s;
  letter-spacing:0.1em;
  border:2px solid transparent;
  border-bottom-color:rgba(255, 255, 255, 0.5);
  background-color:rgba(255, 255, 255, 0.05);
}
.subscribe__btn:hover, .subscribe__btn:focus{
  color:#ffffff;
  border-color:#ffffff;
  background-color:#d66926;
}

.posts__grid{
  display:grid;
  gap:20px;
  grid-template-areas:"a1 a1 a2 a3" "a4 a5 a6 a6";
  grid-template-columns:repeat(4, 1fr);
}

.posts__item{
  background-color:#eeeeee;
  transition:background-color 0.3s;
}
.posts__item:hover{
  background-color:rgb(212.5, 212.5, 212.5);
}
.posts__item:hover img{
  transform:scale(1.1);
}
.posts__item-link{
  color:inherit;
}
.posts__item-picture{
  overflow:hidden;
  height:300px;
}
.posts__item-image{
  display:block;
  transition:transform 0.3s;
}
.posts__item-content{
  padding:1.25em 1.875em;
  text-align:center;
  line-height:1.25;
}
.posts__item:nth-of-type(1){
  grid-area:a1;
}
.posts__item:nth-of-type(2){
  grid-area:a2;
}
.posts__item:nth-of-type(3){
  grid-area:a3;
}
.posts__item:nth-of-type(4){
  grid-area:a4;
}
.posts__item:nth-of-type(5){
  grid-area:a5;
}
.posts__item:nth-of-type(6){
  grid-area:a6;
}
@media (576px <= width < 768px){
  .skills__container{
    grid-template-areas:"a1 a2" "a3 a2" "a4 a4" "a5 a6" "a5 a7" "a8 a9";
    grid-template-columns:repeat(2, 1fr);
  }
  .about__container{
    gap:40px;
    grid-template-columns:1fr 175px;
  }
  .about__picture{
    margin-top:80px;
  }
  .subscribe__form{
    grid-template-columns:repeat(2, 1fr);
  }
  .subscribe__form-group:nth-of-type(3){
    grid-column:1/3;
    grid-row:2;
  }
}
@media (576px <= width){
  .btn--primary{
    min-width:350px;
  }
  .skills{
    padding:10px;
  }
  .skills__container{
    gap:10px;
  }
  .skills__actions{
    margin-bottom:30px;
  }
  .about__description::before{
    position:absolute;
    top:5px;
    width:2px;
    height:50%;
    min-height:200px;
    content:"";
    background-color:rgba(99, 117, 136, 0.1);
  }
  .about__image{
    max-height:488px;
  }
}
@media (576px <= width) and (576px <= width < 768px){
  .about__description::before{
    right:-24px;
  }
}
@media (576px <= width) and (768px <= width < 992px){
  .about__description::before{
    right:-32px;
  }
}
@media (576px <= width) and (992px <= width){
  .about__description::before{
    right:-50px;
  }
}
@media (height >= 600px){
  .skills__container{
    grid-auto-rows:calc(33.33333vh - 13.3333333333px);
  }
}
@media (768px <= width < 992px){
  .posts, .about{
    padding-top:80px;
    padding-bottom:80px;
  }
  h1{
    font-size:2.5rem;
  }
  h2{
    font-size:2rem;
  }
  .btn--light{
    min-width:200px;
    min-height:50px;
  }
  .header__content-title{
    margin:0 0 43px;
  }
  .skills__container{
    grid-template-areas:"a1 a1 a2" "a3 a4 a4" "a5 a5 a6" "a7 a8 a6" "a7 a9 a9";
    grid-template-columns:repeat(3, 1fr);
  }
  .about__container{
    gap:60px;
    grid-template-columns:1fr 255px;
  }
  .about__picture{
    margin-top:100px;
  }
}
@media (768px <= width){
  .header__navbar-list{
    display:grid;
    justify-content:end;
    gap:20px;
    grid-template-columns:repeat(auto-fit, minmax(40px, max-content));
    margin:0 -10px 0 0;
    padding:0;
    list-style:none;
  }
  .header__navbar-link{
    padding:20px 10px;
  }
  .header__navbar-btn{
    display:none;
  }
  .skills__item-title{
    font-size:1.25rem;
  }
  .about__description{
    font-size:1.125rem;
  }
  .subscribe__form{
    grid-template-columns:repeat(3, 1fr);
  }
}
@media (992px <= width){
  .posts, .about{
    padding-top:100px;
    padding-bottom:100px;
  }
  h1{
    font-size:3.75rem;
  }
  h2{
    font-size:2.5rem;
  }
  .btn--light{
    min-width:250px;
    min-height:60px;
    font-size:1.125rem;
  }
  .header__content-title{
    margin:0 0 53px;
  }
  .skills__container{
    grid-template-areas:"a1 a1 a2 a3" "a4 a5 a5 a6" "a7 a8 a9 a6";
    grid-template-columns:repeat(4, 1fr);
  }
  .about__container{
    gap:100px;
    grid-template-columns:1fr 271px;
  }
  .subscribe__input{
    font-size:1.125em;
  }
  .subscribe__btn{
    font-size:1.125em;
  }
}
@media (width < 768px){
  .posts, .about{
    padding-top:60px;
    padding-bottom:60px;
  }
  h1{
    font-size:1.875rem;
  }
  h2{
    font-size:1.5rem;
  }
  .btn--light{
    min-width:170px;
    min-height:40px;
  }
  .header__content-title{
    margin:0 0 33px;
  }
  .header__menu{
    background-color:rgba(68, 89, 110, 0.25);
    box-shadow:-3px 3px 20px -10px #000000;
  }
  .header__navbar-list{
    position:absolute;
    top:100%;
    right:20px;
    display:none;
    overflow:hidden;
    text-align:right;
    box-shadow:-3px 3px 20px -10px #000000;
    margin:0;
    padding:0;
    list-style:none;
  }
  .header__navbar-list::before{
    position:absolute;
    z-index:-1;
    top:-20px;
    right:-20px;
    bottom:-20px;
    left:-20px;
    content:"";
    background-color:rgba(68, 89, 110, 0.25);
    backdrop-filter:blur(5px);
  }
  .header__navbar-item{
    margin:20px;
  }
  .header__navbar-link{
    padding:10px 20px;
  }
  .skills__item-title{
    font-size:1.125rem;
  }
}
@media (height < 600px){
  .skills__container{
    grid-auto-rows:186.6666666667px;
  }
}
@media (width < 576px){
  h2{
    text-align:center;
  }
  .btn--primary{
    width:100%;
  }
  .header__content-actions{
    align-items:center;
    flex-direction:column;
  }
  .skills{
    padding:20px;
  }
  .skills__container{
    gap:20px;
    grid-template-areas:"a1" "a2" "a3" "a4" "a5" "a6" "a7" "a8" "a9";
  }
  .about__picture{
    margin-top:60px;
  }
  .about__image{
    max-height:400px;
  }
}/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */
